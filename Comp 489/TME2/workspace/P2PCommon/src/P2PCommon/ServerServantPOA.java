package P2PCommon;


/**
* P2PCommon/ServerServantPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ServerInterface.idl
* Sunday, February 28, 2016 9:02:18 o'clock PM PST
*/

public abstract class ServerServantPOA extends org.omg.PortableServer.Servant
 implements P2PCommon.ServerServantOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("sayHello", new java.lang.Integer (0));
    _methods.put ("authorize", new java.lang.Integer (1));
    _methods.put ("updateAddress", new java.lang.Integer (2));
    _methods.put ("share", new java.lang.Integer (3));
    _methods.put ("isShared", new java.lang.Integer (4));
    _methods.put ("getSharedFiles", new java.lang.Integer (5));
    _methods.put ("stopShare", new java.lang.Integer (6));
    _methods.put ("findFile", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // P2PCommon/ServerServant/sayHello
       {
         String $result = null;
         $result = this.sayHello ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // P2PCommon/ServerServant/authorize
       {
         String username = in.read_string ();
         String password = in.read_string ();
         boolean $result = false;
         $result = this.authorize (username, password);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // P2PCommon/ServerServant/updateAddress
       {
         String username = in.read_string ();
         String ip = in.read_string ();
         int port = in.read_long ();
         this.updateAddress (username, ip, port);
         out = $rh.createReply();
         break;
       }

       case 3:  // P2PCommon/ServerServant/share
       {
         String username = in.read_string ();
         String filename = in.read_string ();
         this.share (username, filename);
         out = $rh.createReply();
         break;
       }

       case 4:  // P2PCommon/ServerServant/isShared
       {
         String username = in.read_string ();
         String filename = in.read_string ();
         boolean $result = false;
         $result = this.isShared (username, filename);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 5:  // P2PCommon/ServerServant/getSharedFiles
       {
         String username = in.read_string ();
         String $result[] = null;
         $result = this.getSharedFiles (username);
         out = $rh.createReply();
         P2PCommon.StringsHelper.write (out, $result);
         break;
       }

       case 6:  // P2PCommon/ServerServant/stopShare
       {
         String username = in.read_string ();
         String filename = in.read_string ();
         this.stopShare (username, filename);
         out = $rh.createReply();
         break;
       }

       case 7:  // P2PCommon/ServerServant/findFile
       {
         String username = in.read_string ();
         String filename = in.read_string ();
         String $result[] = null;
         $result = this.findFile (username, filename);
         out = $rh.createReply();
         P2PCommon.StringsHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:P2PCommon/ServerServant:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ServerServant _this() 
  {
    return ServerServantHelper.narrow(
    super._this_object());
  }

  public ServerServant _this(org.omg.CORBA.ORB orb) 
  {
    return ServerServantHelper.narrow(
    super._this_object(orb));
  }


} // class ServerServantPOA
